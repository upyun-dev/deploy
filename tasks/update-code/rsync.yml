---

- name: ANSISTRANO | RSYNC | Rsync application files to remote shared copy
  shell: rsync {{ ansistrano_rsync_opts }} {{ ansistrano_rsync_src }} {{ ansistrano_tmp.stdout }}
  args:
    chdir: "{{ dest }}"
    executable: /bin/bash

- name: ANSISTRANO | RSYNC | Get shared path (in rsync case)
  command: echo "{{ ansistrano_shared_path.stdout }}/.shared-copy"
  register: ansistrano_shared_rsync_copy_path

- name: ANSISTRANO | Ensure shared path
  file:
    state: directory
    path: "{{ ansistrano_shared_rsync_copy_path.stdout }}"

- name: ANSISTRANO | RSYNC | mv tmp/current => .shared-copy
  # shell: mv -f {{ ansistrano_tmp.stdout }}/current/* "{{ ansistrano_shared_rsync_copy_path.stdout }}"
  shell: >
    for i in $(ls -A {{ ansistrano_tmp.stdout }}/current); do
      [[ -d {{ ansistrano_shared_rsync_copy_path.stdout }}/$i ]] && rm -rf {{ ansistrano_shared_rsync_copy_path.stdout }}/$i;
      mv -f {{ ansistrano_tmp.stdout }}/current/$i {{ ansistrano_shared_rsync_copy_path.stdout }};
    done
  args:
    executable: /bin/bash

- name: ANSISTRANO | RSYNC | rm tmp/current
  shell: rm -rf "{{ ansistrano_tmp.stdout }}/current"

- name: ANSISTRANO | RSYNC | mv others to deploy path
  # shell: mv -f {{ ansistrano_tmp.stdout }}/* {{ ansistrano_deploy_to }}
  shell: >
    for i in $(ls -A {{ ansistrano_tmp.stdout }}); do
      [[ -d {{ ansistrano_deploy_to }}/$i ]] && rm -rf {{ ansistrano_deploy_to }}/$i;
      mv -f {{ ansistrano_tmp.stdout }}/$i {{ ansistrano_deploy_to }};
    done
  args:
    executable: /bin/bash

- name: ANSISTRANO | RSYNC | Deploy existing code to servers
  command: cp -a {{ ansistrano_shared_rsync_copy_path.stdout }} {{ ansistrano_release_path.stdout }}

- name: ANSISTRANO | RSYNC | rm .shared-copy
  shell: rm -rf {{ ansistrano_shared_rsync_copy_path.stdout }}

- name: ANSISTRANO | RSYNC | clean {{ ansistrano_tmp.stdout }}
  file:
    state: absent
    path: "{{ ansistrano_tmp.stdout }}"
  when: not save_tmp
